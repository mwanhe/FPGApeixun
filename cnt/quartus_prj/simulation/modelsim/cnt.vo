// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "10/16/2024 10:02:54"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module cnt (
	clk,
	rst_n,
	cnt_out);
input 	clk;
input 	rst_n;
output 	[3:0] cnt_out;

// Design Ports Information
// cnt_out[0]	=>  Location: PIN_N9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cnt_out[1]	=>  Location: PIN_N8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cnt_out[2]	=>  Location: PIN_K9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cnt_out[3]	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// rst_n	=>  Location: PIN_J6,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("cnt_v.sdo");
// synopsys translate_on

wire \cnt_out[0]~output_o ;
wire \cnt_out[1]~output_o ;
wire \cnt_out[2]~output_o ;
wire \cnt_out[3]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \cnt_out[1]~1_combout ;
wire \rst_n~input_o ;
wire \rst_n~inputclkctrl_outclk ;
wire \cnt_out[1]~reg0_q ;
wire \cnt_out[2]~2_combout ;
wire \cnt_out[2]~reg0_q ;
wire \cnt_out~0_combout ;
wire \cnt_out[0]~reg0_q ;
wire \cnt_out[3]~3_combout ;
wire \cnt_out[3]~reg0_q ;


// Location: IOOBUF_X20_Y0_N2
cycloneiv_io_obuf \cnt_out[0]~output (
	.i(\cnt_out[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cnt_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \cnt_out[0]~output .bus_hold = "false";
defparam \cnt_out[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X20_Y0_N9
cycloneiv_io_obuf \cnt_out[1]~output (
	.i(\cnt_out[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cnt_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \cnt_out[1]~output .bus_hold = "false";
defparam \cnt_out[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X22_Y0_N2
cycloneiv_io_obuf \cnt_out[2]~output (
	.i(\cnt_out[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cnt_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \cnt_out[2]~output .bus_hold = "false";
defparam \cnt_out[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y0_N9
cycloneiv_io_obuf \cnt_out[3]~output (
	.i(\cnt_out[3]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cnt_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \cnt_out[3]~output .bus_hold = "false";
defparam \cnt_out[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N15
cycloneiv_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G17
cycloneiv_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X21_Y1_N2
cycloneiv_lcell_comb \cnt_out[1]~1 (
// Equation(s):
// \cnt_out[1]~1_combout  = \cnt_out[1]~reg0_q  $ (\cnt_out[0]~reg0_q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\cnt_out[1]~reg0_q ),
	.datad(\cnt_out[0]~reg0_q ),
	.cin(gnd),
	.combout(\cnt_out[1]~1_combout ),
	.cout());
// synopsys translate_off
defparam \cnt_out[1]~1 .lut_mask = 16'h0FF0;
defparam \cnt_out[1]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N22
cycloneiv_io_ibuf \rst_n~input (
	.i(rst_n),
	.ibar(gnd),
	.o(\rst_n~input_o ));
// synopsys translate_off
defparam \rst_n~input .bus_hold = "false";
defparam \rst_n~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G19
cycloneiv_clkctrl \rst_n~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\rst_n~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\rst_n~inputclkctrl_outclk ));
// synopsys translate_off
defparam \rst_n~inputclkctrl .clock_type = "global clock";
defparam \rst_n~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X21_Y1_N3
dffeas \cnt_out[1]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt_out[1]~1_combout ),
	.asdata(vcc),
	.clrn(\rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\cnt_out[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_out[1]~reg0 .is_wysiwyg = "true";
defparam \cnt_out[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X21_Y1_N28
cycloneiv_lcell_comb \cnt_out[2]~2 (
// Equation(s):
// \cnt_out[2]~2_combout  = \cnt_out[2]~reg0_q  $ (((\cnt_out[1]~reg0_q  & \cnt_out[0]~reg0_q )))

	.dataa(gnd),
	.datab(\cnt_out[1]~reg0_q ),
	.datac(\cnt_out[2]~reg0_q ),
	.datad(\cnt_out[0]~reg0_q ),
	.cin(gnd),
	.combout(\cnt_out[2]~2_combout ),
	.cout());
// synopsys translate_off
defparam \cnt_out[2]~2 .lut_mask = 16'h3CF0;
defparam \cnt_out[2]~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X21_Y1_N29
dffeas \cnt_out[2]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt_out[2]~2_combout ),
	.asdata(vcc),
	.clrn(\rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\cnt_out[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_out[2]~reg0 .is_wysiwyg = "true";
defparam \cnt_out[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X21_Y1_N12
cycloneiv_lcell_comb \cnt_out~0 (
// Equation(s):
// \cnt_out~0_combout  = (!\cnt_out[0]~reg0_q  & ((\cnt_out[3]~reg0_q ) # ((\cnt_out[1]~reg0_q ) # (\cnt_out[2]~reg0_q ))))

	.dataa(\cnt_out[3]~reg0_q ),
	.datab(\cnt_out[1]~reg0_q ),
	.datac(\cnt_out[0]~reg0_q ),
	.datad(\cnt_out[2]~reg0_q ),
	.cin(gnd),
	.combout(\cnt_out~0_combout ),
	.cout());
// synopsys translate_off
defparam \cnt_out~0 .lut_mask = 16'h0F0E;
defparam \cnt_out~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X21_Y1_N13
dffeas \cnt_out[0]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt_out~0_combout ),
	.asdata(vcc),
	.clrn(\rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\cnt_out[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_out[0]~reg0 .is_wysiwyg = "true";
defparam \cnt_out[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X21_Y1_N22
cycloneiv_lcell_comb \cnt_out[3]~3 (
// Equation(s):
// \cnt_out[3]~3_combout  = \cnt_out[3]~reg0_q  $ (((\cnt_out[0]~reg0_q  & (\cnt_out[2]~reg0_q  & \cnt_out[1]~reg0_q ))))

	.dataa(\cnt_out[0]~reg0_q ),
	.datab(\cnt_out[2]~reg0_q ),
	.datac(\cnt_out[3]~reg0_q ),
	.datad(\cnt_out[1]~reg0_q ),
	.cin(gnd),
	.combout(\cnt_out[3]~3_combout ),
	.cout());
// synopsys translate_off
defparam \cnt_out[3]~3 .lut_mask = 16'h78F0;
defparam \cnt_out[3]~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X21_Y1_N23
dffeas \cnt_out[3]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\cnt_out[3]~3_combout ),
	.asdata(vcc),
	.clrn(\rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\cnt_out[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_out[3]~reg0 .is_wysiwyg = "true";
defparam \cnt_out[3]~reg0 .power_up = "low";
// synopsys translate_on

assign cnt_out[0] = \cnt_out[0]~output_o ;

assign cnt_out[1] = \cnt_out[1]~output_o ;

assign cnt_out[2] = \cnt_out[2]~output_o ;

assign cnt_out[3] = \cnt_out[3]~output_o ;

endmodule
